

@*
    // Source: Saini (2024), ASP.NET Core MVC Crash Course
    // Adapted for event management system
    // Original concept: Generic viewmodel with EF Core
*@
@{
    Layout = "_Layout";
}
@model ST10435077___CLDV6211_POE.Venue

<h1>Edit Venue</h1>

@if (Model is null)
{
    <p> No venue was found with this ID </p>

}
else
{ 
    <form method="post">

        <div class="mt-3">
            <label class="form-label">Venue ID</label>
            <input type="text" class="form-control" asp-for="VenueId" readonly />
        </div>

        <div class="mt-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" asp-for="VenueName" />
        </div>


        <div class="mt-3">
            <label class="form-label">Location</label>
            <input type="text" class="form-control" asp-for="Location" />
        </div>

        <div class="mt-3">
            <label class="form-label">Capacity</label>
            <input type="text" class="form-control" asp-for="Capacity" />
        </div>

        <div class="mt-3">
            <label class="form-label">Name</label>
            <input type="text" class="form-control" asp-for="ImageUrl" />
        </div>

        <div class="mt-3 d-flex gap-2">
            <button type="submit" class="btn btn-primary">Save</button>     //Code being within the same div enables the buttons to be placed neatly
            <button type="submit" class="btn btn-danger"
                    asp-action="Delete"
                    asp-controller="Venue">
                Delete
            </button>
        </div>

    </form>
}

