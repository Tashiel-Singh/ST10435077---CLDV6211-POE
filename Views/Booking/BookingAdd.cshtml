@*
    // Source: Saini (2024), ASP.NET Core MVC Crash Course
// Adapted for event management system
// Original concept: Generic viewmodel with EF Core
*@
@model ST10435077___CLDV6211_POE.Models.Booking

@{
    Layout = "_Layout";
    ViewData["Title"] = "Create Booking";
}

<h1>Create Booking</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<form asp-action="Create" method="post">
    <div class="mt-3">
        <label class="form-label">Event ID</label>
        <input type="number" class="form-control" asp-for="EventId" />
    </div>

    <div class="mt-3">
        <label class="form-label">Venue ID</label>
        <input type="number" class="form-control" asp-for="VenueId" />
    </div>

    <div class="mt-3">
        <label class="form-label">Status</label>
        <select class="form-control" asp-for="Status">
            <option value="Pending">Pending</option>
            <option value="Confirmed">Confirmed</option>
            <option value="Cancelled">Cancelled</option>
        </select>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Submit</button>
        <a asp-action="BookingList" class="btn btn-secondary">Cancel</a>
    </div>
</form>